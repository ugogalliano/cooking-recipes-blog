version: "3"
services:
  strapi_prod:
    container_name: strapi_prod
    build:
      context: ./food-cms-strapi
      dockerfile: Dockerfile-prod
    restart: unless-stopped
    env_file:
      - ./food-cms-strapi/.env.production
    volumes:
      - ./food-cms-strapi/public:/opt/app/public
    expose:
      - "1337"
    ports:
      - "1337:1337"
    networks:
      - app
    depends_on:
      - strapi_db_prod

  strapi_db_prod:
    container_name: strapi_db_prod
    image: postgres:15-alpine
    env_file:
      - ./food-cms-strapi/.env.production
    volumes:
      - strapi-data:/var/lib/postgresql/data
      - ./food-cms-strapi/database/backup:/docker-entrypoint-initdb.d
    networks:
      - app
    expose:
      - "5432"

  nextjs:
    container_name: nextjs
    build:
      context: .
      dockerfile: Dockerfile-prod
    env_file: .env.production
    environment:
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - strapi_prod
    networks:
      - app

  # NGINX Reverse Proxy
  nginx:
    container_name: nginx
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/certificates:/etc/letsencrypt
      - ./nginx/certbot-logs:/var/log/certbot
      - ./nginx/certbot-www:/var/www/certbot
    ports:
      - "80:80" # HTTP (for Certbot validation)
      - "443:443" # HTTPS
    depends_on:
      - strapi_prod
      - nextjs
    networks:
      - app

  # Certbot to obtain SSL certificates
  certbot:
    container_name: certbot
    image: certbot/certbot
    command: >
      certonly --webroot --webroot-path=/var/www/certbot
      --email email@hotmail.com
      --agree-tos
      --no-eff-email
      -d "you-ip-adress"
    volumes:
      - ./nginx/certificates:/etc/letsencrypt
      - ./nginx/certbot-logs:/var/log/certbot
      - ./nginx/certbot-www:/var/www/certbot
    networks:
      - app

volumes:
  strapi-data:

networks:
  app:
    driver: bridge
